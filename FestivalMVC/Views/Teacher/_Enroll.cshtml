@model FestivalMVC.Models.Enroll

<td>
    @if (!(Model.LastClassAbbr is null))
    {
        <b>@Model.LastClassAbbr</b> @Html.Raw(Stars(Model.LastAwardRating))
        if (Model.ConsecutiveSuperior > 0)
        {
            @($" X {Model.ConsecutiveSuperior}")
        }
        <b class="small pull-right">@Model.AccumulatedPoints</b>
    }
</td>
<td name="@($"{Model.ClassType}{Model.Student}")" class="text-center">@Html.Raw(RegisterStyle(Model.ClassAbbr, @Model.Status))</td>

@using System.Text
@{

    string Stars(char rating)
    {
        int numStars = "FGES".IndexOf(rating);

        var sb = new StringBuilder("", 200);
        for (var j = 0; j <= numStars; j++)
        {
            sb.Append("<span class='glyphicon glyphicon-star'></span>");
        }

        return sb.ToString();
    }
    string RegisterStyle(string abbr, char status)
    {
        string style = status == '-' ? "default" : "warning";
        return "<span class=\"label label-fixed label-" + style + "\">" + (abbr ?? "") + "</span>";
    }
}
